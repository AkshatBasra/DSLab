# include <stdio.h>
# include <string.h>

char s[10];
int top = -1;
void push(char e);
char pop();
int precedence(char e);

void main()
{
    int i = 0, postfixi = 0;
    char infix[10], postfix[10] = {'\0'}, element, temp;
    //push(stack, &top, '1');
    printf("Enter Expression: ");
    scanf("%s", infix);
    while(i < strlen(infix))
    {
        element = infix[i];
        switch(element)
        {
            case '(' :  push(element);
                        break;
            case ')' :  temp = pop();
                        while(temp != '(')
                        {
                            postfix[postfixi++] = temp;
                            temp = pop();
                        }
                        break;
            case '+' :
            case '-' :
            case '*' :
            case '/' :
            case '^' :  while(precedence(element) < precedence(s[top]))
                        {
                            temp = pop();
                            postfix[postfixi++] = temp;
                        }
                        push(element);
                        break;
            default:    postfix[postfixi++] = element;

        }
        i++;
    }
    while(top > -1)
        postfix[postfixi++] = pop();
    printf("Postfix Expression: %s",postfix);
}

void push(char e)
{
    top++;
    s[top] = e;
}

char pop()
{
    char temp = s[top];
    top-=1;
    return temp;
}

int precedence(char e)
{
    switch(e)
    {
        case ')':  return 4;
        case '^':  return 3;
        case '*':
        case '/':  return 2;
        case '+':
        case '-':  return 1;
        case '(':  return 0;
    }
}
